{
    "swagger": "2.0",
    "info": {
        "description": "This is the api for the NodeMCU sensor",
        "version": "1.0.0",
        "title": "NodeMCU sensor",
        "contact": {
            "email": "davidbeijinho@gmail.com"
        }
    },
    "host": "http://192.168.0.160:8080",
    "basePath": "",
    "tags": [
        {
            "name": "Main",
            "description": "The main route"
        },
        {
            "name": "Sensor",
            "description": "Sensor related routes"
        },
        {
            "name": "Led",
            "description": "Led related routes"
        }
    ],
    "schemes": [
        "http"
    ],
    "paths": {
        "/": {
            "get": {
                "tags": [
                    "Main"
                ],
                "summary": "Get the main information about the device",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/connect": {
            "post": {
                "tags": [
                    "Sensor"
                ],
                "summary": "Connect to the sensor",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    },
                    "400": {
                        "description": "Invalid Order"
                    }
                }
            }
        },
        "/led": {
            "get": {
                "tags": [
                    "Led"
                ],
                "summary": "Get the led information",
                "description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
                "operationId": "getOrderById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "status",
                        "in": "body",
                        "description": "get the status of the led",
                        "required": true,
                        "type": "bollean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Led"
                ],
                "summary": "Set the status of the led",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "status",
                        "in": "body",
                        "description": "get the status of the led",
                        "required": true,
                        "type": "bollean"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        },
        "/sensor": {
            "get": {
                "tags": [
                    "Sensor"
                ],
                "summary": "Get information of the sensor",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        }
    },
    "definitions": {
        "ledInformation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "petId": {
                    "type": "integer",
                    "format": "int64"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "shipDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string",
                    "description": "Order Status",
                    "enum": [
                        "placed",
                        "approved",
                        "delivered"
                    ]
                },
                "complete": {
                    "type": "boolean",
                    "default": false
                }
            },
            "xml": {
                "name": "Led Information"
            }
        },
        "sensorInformation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "username": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "userStatus": {
                    "type": "integer",
                    "format": "int32",
                    "description": "User Status"
                }
            },
            "xml": {
                "name": "Sensor information"
            }
        },
        "boardInformation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Board Information"
            }
        },
        "ApiResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}